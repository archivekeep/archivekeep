package cryptoarchive

import (
	"encoding/json"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/keybase/saltpack/basic"
	"gotest.tools/v3/assert"
)

var (
	testPubBoxKey = &[32]byte{0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x4b, 0x65, 0x79, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20}
	testSecBoxKey = &[32]byte{0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x4b, 0x65, 0x79, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20}

	testPubSigKey = &[32]byte{0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x65, 0x79, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x20}
	testSecSigKey = &[64]byte{0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x65, 0x79, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x20, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x4b, 0x65, 0x79, 0x20, 0x46, 0x6f, 0x72, 0x20, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x20}

	testKeyring = keyring{
		BoxKey:     basic.NewSecretKey(testPubBoxKey, testSecBoxKey),
		SigningKey: basic.NewSigningSecretKey(testPubSigKey, testSecSigKey),
	}

	expectedSerializedForm = `{"BoxKey":{"Secret":"U2VjcmV0IEtleSBGb3IgVGVzdGluZyAgICAgICAgICA=","Public":"UHVibGljIEtleSBGb3IgVGVzdGluZyAgICAgICAgICA="},"SigningKey":{"Secret":"U2VjcmV0IFNpZ25pbmcgS2V5IEZvciBUZXN0aW5nICBTZWNyZXQgU2lnbmluZyBLZXkgRm9yIFRlc3RpbmcgIA==","Public":"UHVibGljIFNpZ25pbmcgS2V5IEZvciBUZXN0aW5nICA="}}`

	cmpAllowUnexpectedBasicKeys = cmp.AllowUnexported(
		basic.SecretKey{},
		basic.SigningSecretKey{},
	)
)

func TestKeyring_MarshalJSON(t *testing.T) {
	result, err := json.Marshal(testKeyring)
	assert.NilError(t, err)
	assert.Equal(t, string(result), expectedSerializedForm)
}

func TestKeyring_UnmarshalJSON(t *testing.T) {
	var k keyring

	err := json.Unmarshal([]byte(expectedSerializedForm), &k)
	assert.NilError(t, err)
	assert.DeepEqual(t, k, testKeyring, cmpAllowUnexpectedBasicKeys)
}
